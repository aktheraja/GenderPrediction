{"ast":null,"code":"var _jsxFileName = \"C:\\\\GenderPrediction\\\\website\\\\frontend\\\\src\\\\components\\\\ImageUploader.js\";\nimport React from \"react\";\nimport Resizer from \"react-image-file-resizer\";\nimport axios from \"axios\";\nconst APIUrl = \"https://baroque-saucisson-79648.herokuapp.com/prediction\";\n\nclass ImageUploader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null,\n      isLoading: false,\n      result: null,\n      isUploading: false\n    };\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"myImage\", this.state.file);\n    this.setState({\n      isLoading: true\n    });\n    const config = {\n      headers: {\n        \"content-type\": \"image/jpeg\"\n      }\n    };\n    axios.post(APIUrl, this.state.file, config).then(response => {\n      this.setState({\n        result: response.data\n      });\n      this.setState({\n        isLoading: false\n      });\n    }).catch(error => {});\n  }\n\n  onChange(e) {\n    this.setState({\n      isUploading: true\n    });\n    Resizer.imageFileResizer(e.target.files[0], 1000, 1000, \"JPEG\", 100, 0, uri => {\n      const strImage = uri.replace(/^data:image\\/[a-z]+;base64,/, \"\");\n      this.setState({\n        file: strImage\n      });\n    }, \"base64\");\n    this.setState({\n      isUploading: false\n    });\n  }\n\n  render() {\n    const spinner = React.createElement(\"div\", {\n      className: \"spinner-border\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Loading...\"));\n    const result = this.state.result ? React.createElement(\"img\", {\n      src: \"data:image/jpg;base64,\" + this.state.result,\n      alt: \"failed to load\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }) : null;\n    const showSpinnerOrResults = this.state.isLoading ? spinner : result;\n    return React.createElement(\"div\", {\n      className: \"container-fluid my-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      name: \"myImage\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: this.state.isUploading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Upload\")), React.createElement(\"div\", {\n      className: \"container-fluid my-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, showSpinnerOrResults));\n  }\n\n}\n\nexport default ImageUploader;","map":{"version":3,"sources":["C:\\GenderPrediction\\website\\frontend\\src\\components\\ImageUploader.js"],"names":["React","Resizer","axios","APIUrl","ImageUploader","Component","constructor","props","state","file","isLoading","result","isUploading","onFormSubmit","bind","onChange","e","preventDefault","formData","FormData","append","setState","config","headers","post","then","response","data","catch","error","imageFileResizer","target","files","uri","strImage","replace","render","spinner","showSpinnerOrResults"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Resizer from \"react-image-file-resizer\";\r\nimport axios from \"axios\";\r\n\r\nconst APIUrl = \"https://baroque-saucisson-79648.herokuapp.com/prediction\";\r\n\r\nclass ImageUploader extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      file: null,\r\n      isLoading: false,\r\n      result: null,\r\n      isUploading: false\r\n    };\r\n    this.onFormSubmit = this.onFormSubmit.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n  onFormSubmit(e) {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append(\"myImage\", this.state.file);\r\n    this.setState({ isLoading: true });\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"image/jpeg\"\r\n      }\r\n    };\r\n    axios\r\n      .post(APIUrl, this.state.file, config)\r\n      .then(response => {\r\n        this.setState({ result: response.data });\r\n        this.setState({ isLoading: false });\r\n      })\r\n      .catch(error => {});\r\n  }\r\n  onChange(e) {\r\n    this.setState({ isUploading: true });\r\n    Resizer.imageFileResizer(\r\n      e.target.files[0],\r\n      1000,\r\n      1000,\r\n      \"JPEG\",\r\n      100,\r\n      0,\r\n      uri => {\r\n        const strImage = uri.replace(/^data:image\\/[a-z]+;base64,/, \"\");\r\n        this.setState({ file: strImage });\r\n      },\r\n      \"base64\"\r\n    );\r\n    this.setState({ isUploading: false });\r\n  }\r\n\r\n  render() {\r\n    const spinner = (\r\n      <div className=\"spinner-border\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    );\r\n\r\n    const result = this.state.result ? (\r\n      <img src={\"data:image/jpg;base64,\" + this.state.result} alt=\"failed to load\" />\r\n    ) : null;\r\n\r\n    const showSpinnerOrResults = this.state.isLoading ? spinner : result;\r\n\r\n    return (\r\n      <div className=\"container-fluid my-5\">\r\n        <form onSubmit={this.onFormSubmit}>\r\n          <input type=\"file\" name=\"myImage\" onChange={this.onChange} />\r\n          <button type=\"submit\" disabled={this.state.isUploading}>\r\n            Upload\r\n          </button>\r\n        </form>\r\n        <div className=\"container-fluid my-5\">{showSpinnerOrResults}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageUploader;\r\n"]},"metadata":{},"sourceType":"module"}